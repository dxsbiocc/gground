% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-round-bar.R, R/geom-round-col.R
\name{geom_round_bar}
\alias{geom_round_bar}
\alias{geom_round_col}
\title{round bar}
\usage{
geom_round_bar(
  mapping = NULL,
  data = NULL,
  stat = "count",
  position = "stack",
  ...,
  radius = grid::unit(2, "pt"),
  just = 0.5,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_round_col(
  mapping = NULL,
  data = NULL,
  position = "stack",
  ...,
  just = 0.5,
  radius = grid::unit(0.1, "npc"),
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{aes()} or \code{aes_()}.}

\item{data}{A layer specific dataset - only needed if you want to override the}

\item{stat}{The statistical transformation to use on the data for this layer,}

\item{position}{Position adjustment, either as a string, or the result of a}

\item{...}{Other arguments passed on to \code{layer()}.}

\item{radius}{The radius of the rounded corners.}

\item{just}{A numeric vector of length 1 or 2, giving the x (and optionally y)}

\item{na.rm}{If FALSE, the default, missing values are removed with a warning.}

\item{orientation}{The orientation of the layer. The default (NA) automatically}

\item{show.legend}{logical. Should this layer be included in the legends?}

\item{inherit.aes}{If FALSE, overrides the default aesthetics.}
}
\description{
round bar

title: Round Column Geom
}
\details{
There are two types of bar charts: \code{geom_round_bar()} and \code{geom_round_col()}.
\code{geom_round_bar()} makes the height of the bar proportional to the number of
cases in each group (or if the weight aesthetic is supplied, the sum of the
weights). If you want the heights of the bars to represent values in the data,
use \code{geom_round_col()} instead. \code{geom_round_bar()} uses \code{stat_count()} by default:
it counts the number of cases at each x position. \code{geom_round_col()} uses
\code{stat_identity()}: it leaves the data as is.
}
\examples{
# geom_bar is designed to make it easy to create bar charts that show
# counts (or sums of weights)
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
# Total engine displacement of each class
g + geom_bar(aes(weight = displ))
# Map class to y instead to flip the orientation
ggplot(mpg) + geom_bar(aes(y = class))
}
